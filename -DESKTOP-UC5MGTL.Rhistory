labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(plot.title = element_text(size = 13L, face = "bold", hjust = 0.5), axis.title.y = element_text(size = 14L,
face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_y_continuous(labels = function(x) paste0(x*100, "%"))
#Plot proper
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted),cex=1.5) +
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(plot.title = element_text(size = 13L, face = "bold", hjust = 0.5), axis.title.y = element_text(size = 14L,
face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_y_continuous(labels = function(x) paste0(Prop_pos*100, "%"))
#Plot proper
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted),cex=1.5) +
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(plot.title = element_text(size = 13L, face = "bold", hjust = 0.5), axis.title.y = element_text(size = 14L,
face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_y_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"))
#Plot proper
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted),cex=1.5) +
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"))
##################
# Baseline model #
##################
source(here("Scripts","Baseline.R"))
baseline(nrpl=5000,n=56,c=0.63)
##################
# Baseline model #
##################
source(here("Scripts","Baseline.R"))
baseline(nrpl=5000,n=56,c=0.63)
MF2 = glmer(FOFC~Prop_pos + (1|Farm), family = binomial(link = "logit"), data = FG, na.action = na.omit)
pred.final<-cbind.data.frame(MF2@frame,fitted=predict(MF2,  MF2@frame, type = "response", re.form = NA))
pred.final$FOFC<-as.numeric(ifelse(pred.final$FOFC==1,1,0))
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted),cex=1.5) +
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"))
ggsave(here("Figures","Baseline","Figure1.png"),width = 7,height = 5,device = "png",dpi=300,bg="white")  #save the plot
saveRDS(pred.final, file = here("Output","Baseline","Logistic_prediction.rds"))
Logistic_prediction <- readRDS("C:/Users/defr001/OneDrive/Documents/Project_Henry/Output/Baseline/Logistic_prediction.rds")
View(Logistic_prediction)
##################
# Baseline model #
##################
source(here("Scripts","Baseline.R"))
baseline(nrpl=5000,n=56,c=0.63)
Baseline <- readRDS("C:/Users/defr001/OneDrive/Documents/Project_Henry/Output/Baseline/Baseline.rds")
##################
# Baseline model #
##################
source(here("Scripts","Baseline.R"))
baseline(nrpl=5000,n=56,c=0.63)
MF2@lower
MF2@resp
PI.time <- system.time(
PI <- predictInterval(merMod = MF2, newdata = MF2@frame,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
)
PI.time <- system.time(
PI <- lme4::predictInterval(merMod = MF2, newdata = MF2@frame,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
)
PI <- lme4::predictInterval(merMod = MF2, newdata = MF2@frame,
level = 0.95, n.sims = 1000,
stat = "median", type="linear.prediction",
include.resid.var = TRUE)
?predict()
pred<-predict(MF2,  MF2@frame, type = "response", re.form = NA,simulate_pi = FALSE, alpha = 0.1)
pred
pred<-ciTools::predict(MF2,  MF2@frame, type = "response", re.form = NA,simulate_pi = FALSE, alpha = 0.1)
install.packages("ciTools")
library(ciTools)
pred<-ciTools::predict(MF2,  MF2@frame, type = "response", re.form = NA,simulate_pi = FALSE, alpha = 0.1)
install.packages("trending")
library(trending)
pred<-trending::predict(MF2,  MF2@frame, type = "response", re.form = NA,simulate_pi = FALSE, alpha = 0.1)
pred<-predict(MF2,  MF2@frame, type = "response", re.form = NA,simulate_pi = FALSE, alpha = 0.1)
pred<-predict(MF2,  MF2@frame, type = "response", re.form = NA, alpha = 0.1)
install.packages("merTools")
library(merTools)
pred<-predictInterval(MF2, newdata = MF2@frame, n.sims = 999)
pred
?predictInterval()
pred<-predictInterval(MF2, newdata = MF2@frame, n.sims = 999,type = c("probability"),which = "fixed")
pred
pred.final<-cbind.data.frame(MF2@frame,fitted=pred)
pred.final
names(pred.final)
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted.fit),cex=1.5) +
geom_ribbon(aes(ymin = fitted.lwr, ymax = fitterd.upr), alpha = 0.1)+
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"))
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted.fit),cex=1.5) +
geom_ribbon(aes(ymin = fitted.lwr, ymax = fitted.upr), alpha = 0.1)+
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"))
pred.final<-cbind.data.frame(MF2@frame,fitted=pred)
pred.final$FOFC<-as.numeric(ifelse(pred.final$FOFC==1,1,0))
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted.fit),cex=1.5) +
geom_ribbon(aes(ymin = fitted.lwr, ymax = fitted.upr), alpha = 0.1)+
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"))
pred<-predictInterval(MF2, newdata = MF2@frame, n.sims = 999,type = c("probability"),which = "random")
pred.final<-cbind.data.frame(MF2@frame,fitted=pred)
pred.final$FOFC<-as.numeric(ifelse(pred.final$FOFC==1,1,0))
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted.fit),cex=1.5) +
geom_ribbon(aes(ymin = fitted.lwr, ymax = fitted.upr), alpha = 0.1)+
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"))
pred<-predictInterval(MF2, newdata = MF2@frame, n.sims = 999,type = c("probability"),which = "fixed")
pred.final<-cbind.data.frame(MF2@frame,fitted=pred)
pred.final$FOFC<-as.numeric(ifelse(pred.final$FOFC==1,1,0))
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted.fit),cex=1.5) +
geom_ribbon(aes(ymin = fitted.lwr, ymax = fitted.upr), alpha = 0.1)+
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"))
capture.output(pred.final, file = here("Output","Baseline","Logistic_prediction.txt"), append=FALSE) #Saving crude outcome
ggsave(here("Figures","Baseline","Figure1.png"),width = 7,height = 5,device = "png",dpi=300,bg="white")  #save the plot
Baseline <- readRDS("C:/Users/defr001/OneDrive/Documents/Project_Henry/Output/Baseline/Baseline.rds")
View(Baseline)
Baseline$`1%`$ALP
#Packages to be used
packages<-c("here","tidyverse","ggplot2","gridExtra","lme4","lmtest","readxl", "DT",
"ggridges","viridis","hrbrthemes","tidyr","dplyr","forcats","ggpubr","merTools")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Packages loading
invisible(lapply(packages, library, character.only = TRUE))
######################
# Optimizing cluster #
######################
source(here("Scripts","Ssq_stochastic_gradient.R"))
cluster(nrpl=5000,grad=300)
# Reading and tidy the data
FG = read_excel(here("Data","PrevComp.xlsx"),sheet = "Sheet1",na =".")
FG$Farm = as.factor(FG$Farm)
FG$ROOM = as.factor(FG$ROOM)
FG$FOFC2 = FG$FOFC
FG$FOFC=as.factor(FG$FOFC2)
FG$ROOM=as.factor(FG$ROOM)
MF2 = glmer(FOFC~Prop_pos + (1|Farm), family = binomial(link = "logit"), data = FG, na.action = na.omit)
pred<-predictInterval(MF2, newdata = MF2@frame, n.sims = 10000,type = c("probability"),which = "fixed")
pred.final<-cbind.data.frame(MF2@frame,fitted=pred)
pred.final$FOFC<-as.numeric(ifelse(pred.final$FOFC==1,1,0))
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted.fit),cex=1.5) +
geom_ribbon(aes(ymin = fitted.lwr, ymax = fitted.upr), alpha = 0.1)+
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"))
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.1,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted.fit),cex=1.5) +
geom_ribbon(aes(ymin = fitted.lwr, ymax = fitted.upr), alpha = 0.1)+
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"),breaks = seq(from = 0, to = 1, by = 0.25))
ggplot(pred.final, aes(x=Prop_pos,y=FOFC))+
theme_minimal()+
geom_jitter(position = position_jitter(width = 0.01,height = 0.06),alpha=0.5,size=1.5,shape=21)+
geom_line(aes(x=Prop_pos,y=fitted.fit),cex=1.5) +
geom_ribbon(aes(ymin = fitted.lwr, ymax = fitted.upr), alpha = 0.1)+
labs(x = "Within-litter prevalence",
y = "Probability of PRRSV detection in FOF")+
theme(axis.title.y = element_text(size = 14L, face = "bold"), axis.title.x = element_text(size = 12L, face = "bold"))+
scale_x_continuous(labels = function(Prop_pos) paste0(Prop_pos*100, "%"),breaks = seq(from = 0, to = 1, by = 0.25))
Baseline <- readRDS("C:/Users/Gebruiker/OneDrive/Documents/Project_Henry/Output/Baseline/Baseline.rds")
View(Baseline)
Baseline[["1%"]]
Baseline[["1%"]]
5000*21
teste<-as.data.frame(Baseline[["1%"]])
View(teste)
teste<-as.data.frame(Baseline[["1%"]],PP=rep("1%",5000))
View(teste)
teste<-cbind.data.frame(Baseline[["1%"]],PP=rep("1%",5000))
View(teste)
#Set parameters
prevalence = c(0.01,seq(0.05,1,0.05)) #List of possible prevalences
prevalence
cat(prevalence)
cat(prevalence*100,"%")
paste(prevalence*100,"%")
paste(prevalence*100,"%",sep="")
data_names<-paste(prevalence*100,"%",sep="")
teste<-cbind.data.frame(Baseline[[data_names[1]]],PP=rep("1%",5000))
teste<-cbind.data.frame(Baseline[[data_names[1]]],PP=rep(data_names[1],5000))
teste2<-cbind.data.frame(Baseline[[data_names[2]]],PP=rep(data_names[2],5000))
View(teste2)
unlist(Baseline[["1%"]])
tes<-unlist(Baseline[["1%"]])
View(tes)
do.call(rbind,Baseline)
tes<-do.call(rbind,Baseline)
tes
View(tes)
ds1 <- data.frame(x=c(1,2,3,4), y=c(5,6,7,8))
ds2 <- data.frame(x=c(9,10,11,12), y=c(13,14,15,16))
ds3 <- data.frame(x=c(1,2,3,4), y=c(5,6,7,8))
ds4 <- data.frame(x=c(9,10,11,12), y=c(13,14,15,16))
x.n <- c('ds1','ds2','ds3','ds4')
# create a list of data frames
x.list <- lapply(x.n, get)
View(x.list)
# combine into a single dataframe
do.call(rbind, x.list)
#Packages to be used
packages<-c("here","tidyverse","ggplot2","gridExtra","lme4","lmtest","readxl", "DT",
"ggridges","viridis","hrbrthemes","tidyr","dplyr","forcats","ggpubr","merTools")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Packages loading
invisible(lapply(packages, library, character.only = TRUE))
##################
# Baseline model #
##################
source(here("Scripts","Baseline.R"))
baseline(nrpl=50,n=56,c=0.63)
Baseline <- readRDS("C:/Users/Gebruiker/OneDrive/Documents/Project_Henry/Output/Baseline/Baseline.rds")
View(Baseline)
# combine into a single dataframe
tes<-do.call(rbind, Baseline)
View(tes)
boxplot(tes$ALP)
?do.call()
for(i in 1:length(data_names)){
PP<-rep(data_names[i],nrpl)
}
nrpl<-50
for(i in 1:length(data_names)){
PP<-rep(data_names[i],nrpl)
}
PP
for(i in 1:length(data_names)){
PP<-c(rep(data_names[i],nrpl))
}
PP
for(i in 1:length(data_names)){
PP[]<-rep(data_names[i],nrpl)
}
PP
for(i in 1:length(data_names)){
PP[i]<-rep(data_names[i],nrpl)
}
PP
PP<-list()
for(i in 1:length(data_names)){
PP[[i]]<-rep(data_names[i],nrpl)
}
PP
PP<-unlist(PP)
PP
data_plot<-cbind.data.frame(data_plot,PP=PP)
# combine into a single dataframe
data_plot<-do.call(rbind, final)
data_plot<-cbind.data.frame(data_plot,PP=PP)
data_plot
final<-Baseline
# combine into a single dataframe
data_plot<-do.call(rbind, final)
data_plot<-cbind.data.frame(data_plot,PP=PP)
View(data_plot)
data_plot1<-data_plot%>%
gather(key="A_TLP", value="prev",-PP)
View(data_plot1)
ggplot(data_plot1,aes(x=PP,y=prev,fill=PP))+
geom_violin()
data_names
ggplot(data_plot1,aes(x=PP,y=prev,fill=A_TLP))+
geom_violin()
str(data_plot1)
ggplot(data_plot1,aes(x=PP,y=prev,fill=A_TLP))+
geom_boxplot()
ggplot(data_plot1,aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
ggplot(data_plot1,aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
ggplot(data_plot1,aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
ggplot(aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
ggplot(aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()+
xlab("Piglet prevalence")+
ylab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(1,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
ggplot(aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()+
xlab("Piglet prevalence")+
ylab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(2,3),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
ggplot(aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()+
xlab("Piglet prevalence")+
ylab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(0,1),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
ggplot(aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()+
xlab("Piglet prevalence")+
ylab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(2,4),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
ggplot(aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()+
xlab("Piglet prevalence")+
ylab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
subset(PP %in% c("5%","30","50%","70%","95" ) )%>%
ggplot(aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()+
xlab("Piglet prevalence")+
ylab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
subset(PP %in% c("5%","30","50%","70%","95%" ) )%>%
ggplot(aes(x=PP,y=prev,fill=A_TLP))+
theme_minimal()+
geom_boxplot()+
xlab("Piglet prevalence")+
ylab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
subset(PP %in% c("5%","30","50%","70%","95%" ) )%>%
ggplot(aes(x=prev,y=PP,fill=A_TLP))+
geom_density_ridges(alpha = 0.6, scale = 1.2) +
xlab("Piglet prevalence")+
ylab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
subset(PP %in% c("5%","30","50%","70%","95%" ) )%>%
ggplot(aes(x=prev,y=PP,fill=A_TLP))+
geom_density_ridges(alpha = 0.6, scale = 1.2) +
ylab("Piglet prevalence")+
xlab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
subset(PP %in% c("5%","30","50%","70%","95%" ) )%>%
ggplot(aes(x=prev,y=PP,fill=A_TLP))+
theme_minimal()+
geom_density_ridges(alpha = 0.6, scale = 1.2) +
ylab("Piglet prevalence")+
xlab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
subset(PP %in% c("5%","30","50%","70%","95%" ) )%>%
ggplot(aes(x=prev,y=PP,fill=A_TLP))+
theme_minimal()+
geom_density_ridges(alpha = 0.6, scale = 0.2) +
ylab("Piglet prevalence")+
xlab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
subset(PP %in% c("5%","30","50%","70%","95%" ) )%>%
ggplot(aes(x=prev,y=PP,fill=A_TLP))+
theme_minimal()+
geom_density_ridges(alpha = 0.6, scale = 2) +
ylab("Piglet prevalence")+
xlab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
subset(PP %in% c("5%","30","50%","70%","95%" ) )%>%
ggplot(aes(x=prev,y=PP,fill=A_TLP))+
theme_minimal()+
geom_density_ridges(alpha = 0.6, scale = 1.5) +
ylab("Piglet prevalence")+
xlab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
data_plot1%>%
arrange(data_plot1) %>%
mutate(PP = factor(PP, levels=data_names)) %>%
subset(PP %in% c("5%","30","50%","70%","95%" ) )%>%
ggplot(aes(x=prev,y=PP,fill=A_TLP))+
theme_minimal()+
geom_density_ridges(alpha = 0.4, scale = 1.5) +
ylab("Piglet prevalence")+
xlab("Litter prevalence")+
theme(legend.position="right")+
scale_fill_manual(values=c(4,2),labels=c("Apparent","True"))+
labs(fill = "Litter prevalence")
